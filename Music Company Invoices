-- The following SQL is used to analyze a database of 11 tables including invoices for a music company and details about the music, including artist, track, and genre.

-- 1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT 
FirstName
, LastName
, Country
FROM customers
WHERE Country <> 'USA'
;


-- 2. Show only the Customers from Brazil.

SELECT 
FirstName
, LastName
, Country
FROM customers
WHERE Country = 'Brazil'
;

-- 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT
FirstName
, LastName
, InvoiceId
, InvoiceDate
, BillingCountry
FROM invoices
LEFT JOIN customers
    ON invoices.CustomerId = customers.CustomerId 
WHERE Country = 'Brazil'
;

-- 4. Show the Employees who are Sales Agents.

SELECT 
FirstName
, LastName
FROM employees
WHERE Title = "Sales Support Agent"
;


-- 5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT DISTINCT BillingCountry
FROM invoices
ORDER BY BillingCountry ASC
;

-- 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT
FirstName
, LastName
, InvoiceId
FROM Employees 
JOIN Customers 
    ON Customers.SupportRepId = Employees.EmployeeId
    JOIN Invoices 
        ON Invoices.CustomerId = Customers.CustomerId
;

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT 
emp.LastName
, emp.Firstname
, cust.FirstName
, cust.LastName
, cust.Country
, inv.total
FROM employees emp 
JOIN chinook.Customers cust 
    ON cust.SupportRepId = emp.EmployeeId
    JOIN chinook.Invoices Inv 
    ON Inv.CustomerId = cust.CustomerId
;

-- 8. How many Invoices were there in 2009?

SELECT 
COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate LIKE '2009%'
;

-- 9. What are the total sales for 2009?

SELECT 
SUM(Total)
FROM invoices
WHERE InvoiceDate LIKE '2009%'
;

-- 10. Write a query that includes the purchased track name with each invoice line ID.

SELECT 
Name, 
InvoiceLineId
FROM Invoice_items
JOIN Tracks
ON Invoice_items.TrackId = Tracks.TrackId
;

-- 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT
InvoiceId
, tracks.Name AS track_name
, artists.Name as artist_name
FROM invoice_items
    LEFT JOIN tracks
    ON invoice_items.TrackId = tracks.TrackId
    INNER JOIN albums
    ON albums.AlbumId = tracks.AlbumId
    LEFT JOIN artists
    ON artists.ArtistId = albums.ArtistId
;

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT
tracks.Name AS track_name
, albums.Title AS album_title
, media_types.Name AS media_type
, genres.Name AS genre
FROM tracks
    LEFT JOIN media_types
        ON tracks.MediaTypeId = media_types.MediaTypeId
    LEFT JOIN albums
        ON tracks.AlbumId = albums.AlbumId
    LEFT JOIN genres
        ON tracks.GenreId = genres.GenreId
;

-- 13. Show the total sales made by each sales agent.

SELECT 
employees.LastName
, SUM(Total)
FROM employees
    LEFT JOIN customers
    ON employees.EmployeeId = customers.SupportRepId
    LEFT JOIN invoices
    ON customers.CustomerId = invoices.CustomerId
WHERE Title LIKE 'Sales%Agent'
GROUP BY employees.LastName;



-- 14. Which sales agent made the most dollars in sales in 2009?

SELECT 
employees.LastName
, SUM(Total)
FROM employees
    LEFT JOIN customers
    ON employees.EmployeeId = customers.SupportRepId
    LEFT JOIN invoices
    ON customers.CustomerId = invoices.CustomerId
WHERE Title LIKE 'Sales%Agent'
GROUP BY employees.LastName
ORDER BY SUM(Total) DESC
LIMIT 1;
